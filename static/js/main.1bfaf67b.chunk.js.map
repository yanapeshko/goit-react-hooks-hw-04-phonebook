{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","className","s","form_container","preventDefault","inputName","inputNumber","form_label","form_input","type","pattern","title","onChange","required","form_button","ContactList","contacts","handleDelete","contactsList","map","id","item","item_text","item_button","onClick","list","Filter","filter","onFilterChange","styles","filter_label","filter_input","App","setContacts","setFilter","useEffect","JSON","parse","window","localStorage","getItem","setItem","stringify","contact","v4","includes","alert","toLowerCase","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bfaf67b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"ContactForm_form_container__12jeA\",\"form_input\":\"ContactForm_form_input__2KBLL\",\"form_label\":\"ContactForm_form_label__3e6IC\",\"form_button\":\"ContactForm_form_button__3mcSc\",\"animate_grow\":\"ContactForm_animate_grow__Dkutx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3gCBg\",\"item\":\"ContactList_item__24jl0\",\"item_text\":\"ContactList_item_text__3on6M\",\"item_button\":\"ContactList_item_button__2jg2M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__22nYv\",\"filter_input\":\"Filter_filter_input__ZCBWp\"};","import { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const inputName = e.currentTarget.name.value;\n    const inputNumber = e.currentTarget.number.value;\n\n    onSubmit(inputName, inputNumber);\n    reset();\n  };\n\n  return (\n    <form className={s.form_container} onSubmit={handleSubmit}>\n      <label className={s.form_label}>\n        Name\n        <input\n          className={s.form_input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className={s.form_label}>\n        Number\n        <input\n          className={s.form_input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button className={s.form_button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { PropTypes } from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, handleDelete }) {\n  const contactsList = contacts.map(({ id, name, number }) => (\n    <li className={s.item} key={id}>\n      <div>\n        <span className={s.item_text}>\n          {name}: {number}\n        </span>\n        <button\n          className={s.item_button}\n          id={id}\n          type=\"button\"\n          onClick={() => handleDelete(id)}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  ));\n\n  return <ul className={s.list}>{contactsList}</ul>;\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styles from './Filter.module.css';\nimport { PropTypes } from 'prop-types';\n\nfunction Filter({ filter, onFilterChange }) {\n  return (\n    <label className={styles.filter_label}>\n      Find contacts by name:\n      <input\n        className={styles.filter_input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { v4 } from 'uuid';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport './App.css';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    setContacts(JSON.parse(window.localStorage.getItem('contacts')) ?? []);\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: v4(),\n      name,\n      number,\n    };\n    contacts.map(contact => contact.name).includes(name)\n      ? alert(`Inputed ${name} is already in the contacts`)\n      : setContacts([...contacts, contact]);\n  };\n\n  const handleFilterContacts = e => {\n    return setFilter(e.currentTarget.value);\n  };\n\n  const getFilteredContacts = () => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <div className=\"main_container\">\n      <div className=\"main_title_container\">\n        <h1 className=\"main_title\">Phonebook</h1>\n      </div>\n\n      <ContactForm onSubmit={addContact} />\n\n      <h2 className=\"title\">Contacts</h2>\n      <Filter filter={filter} onFilterChange={handleFilterContacts} />\n      <ContactList\n        contacts={getFilteredContacts()}\n        handleDelete={deleteContact}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}